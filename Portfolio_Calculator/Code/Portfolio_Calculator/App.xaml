<Application x:Class="Portfolio_Calculator.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:properties="clr-namespace:Portfolio_Calculator.Properties"
             xmlns:local="clr-namespace:Portfolio_Calculator"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <Style x:Name="whiteStyle" TargetType="Button">
                <Style.Resources>
                    <Style x:Name="bruh" TargetType="Border">
                        <Setter Property="CornerRadius" Value="15" />
                        <Setter Property="Background" Value="White"/>
                    </Style>
                </Style.Resources>
                <Style.Triggers>
                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorModes}" Value="Dark">
                        <Setter Property="Background" Value="#272b33"/>
                        <Setter Property="Foreground" Value="White"/>
                    </DataTrigger>
                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorModes}" Value="Light">
                        <Setter Property="Background" Value="#f7f7f7"/>
                        <Setter Property="Foreground" Value="Black"/>

                    </DataTrigger>

                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
                <Setter Property="FontSize" Value="35"/>
                <Setter Property="Background" Value="#f9f9f9"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontFamily" Value="Inter"/>
            </Style>

            <Style TargetType="Label">
                <Style.Triggers>
                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorModes}" Value="Dark">
                        <Setter Property="Foreground" Value="White"/>
                    </DataTrigger>
                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorModes}" Value="Light">
                        <Setter Property="Foreground" Value="Black"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <!--Dark Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorModes}" Value="Dark">
                        <Setter Property="Background" Value="#22252d"/>
                    </DataTrigger>
                    <!--Light Mode-->
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorModes}" Value="Light">
                        <Setter Property="Background" Value="White"/>
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="Background" Value="White"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
